plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def selenideVersion = "7.8.0"
def allureVersion = "2.29.0"
def aspectJVersion = '1.9.24'

allure {
    version = allureVersion
    adapter { // отвечает за появление build/allure-results
        autoconfigure = true
        aspectjWeaver = true // обработка @Step
        frameworks {
            junit5 { // название фреймворка
                adapterVersion = allureVersion
            }
        }
    }
}

dependencies {

    testImplementation platform('org.junit:junit-bom:5.10.0')

    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.slf4j:slf4j-simple:2.0.16'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'

    implementation "com.codeborne:selenide:$selenideVersion"
    implementation "io.qameta.allure:allure-junit5:$allureVersion"
    implementation "io.qameta.allure:allure-selenide:$allureVersion"
    implementation "org.aspectj:aspectjweaver:$aspectJVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}

task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}